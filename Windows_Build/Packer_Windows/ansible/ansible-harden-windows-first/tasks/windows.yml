---
# https://docs.ansible.com/ansible/intro_windows.html
# Client should have PowerShell remoting configured
# Execute: https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1

# https://benchmarks.cisecurity.org/downloads/browse/index.cfm?category=benchmarks.os.windows
# https://technet.microsoft.com/en-us/library/gg236605.aspx
# https://technet.microsoft.com/en-us/library/cc677002.aspx
# http://iase.disa.mil/stigs/Pages/index.aspx
# http://iase.disa.mil/stigs/Pages/stig-viewing-guidance.aspx

- name: Create temp dir
  win_file: 
    path: "{{ harden_win_temp_dir }}"
    state: directory

- name: Install all security/critical updates
  win_updates:
    category_names: 
     - SecurityUpdates
     - CriticalUpdates
     - UpdateRollups
    logPath: "{{ harden_win_temp_dir }}\\ansible-updates.log"
  when: harden_win_securityupdates is defined and harden_win_securityupdates
  tags:
    - updates

## https://github.com/ansible/ansible/issues/13856
## FIXME! FAILED! => {"changed": false, "choco_bootstrap_output": ["Getting latest version of the Chocolatey package for download.", "Getting Chocolatey from https://chocolatey.org/api/v2/package/chocolatey/0.10.3.", "Downloading 7-Zip commandline tool prior to extraction.", "Extracting C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\chocolatey\\chocInstall\\chocolatey.zip to C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\chocolatey\\chocInstall...", "Installing chocolatey on this machine", "Creating ChocolateyInstall as an environment variable (targeting 'Machine') ", "  Setting ChocolateyInstall to 'C:\\ProgramData\\chocolatey'", "WARNING: It's very likely you will need to close and reopen your shell ", "  before you can use choco."], "failed": true, "msg": "Chocolatey bootstrap installation failed."}
#- name: Chocolatey installation
#  win_chocolatey: name=chocolatey state=present upgrade=no

#- name: Fix problem with Chocolatey .99 (https://github.com/ansible/ansible-modules-extras/issues/378)
#  raw: Chocolatey feature enable -n allowGlobalConfirmation

- name: Install packages
  win_chocolatey:
    name: "{{ item }}"
  with_items: "{{ harden_win_chocolateypkgs }}"
# for package asking for reboot
  ignore_errors: true
  tags:
    - packages

# http://www.marksanborn.net/howto/turn-off-unnecessary-windows-services/
# http://www.7tutorials.com/which-windows-services-are-safe-disable-when
# http://www.blackviper.com/service-configurations/black-vipers-windows-10-service-configurations/
- block:
    - name: Disable unnecessary services
      win_service:
        name: "{{ item }}"
        start_mode: disabled
        state: stopped
      with_items: "{{ harden_win_services_disable }}"
      ignore_errors: true

    - name: Set some services in manual start
      win_service:
        name: "{{ item }}"
        start_mode: manual
      with_items: "{{ harden_win_services_manual }}"
      ignore_errors: true
  when: harden_win_services is defined and harden_win_services
  tags:
    - services

## TODO: Enable AppLocker in audit mode
## https://www.sixdub.net/?p=367
## https://dfir-blog.com/2016/01/03/protecting-windows-networks-applocker/
## http://www.scip.ch/en/?labs.20150507
## https://www.sysadmins.lv/blog-en/powershell-50-and-applocker-when-security-doesnt-mean-security.aspx
## block: {{ harden_win_temp_dir }}, C:\ProgramData, Recycle Bin
## block for non-admin users: Powershell+ddl? Deny: %SYSTEM32%\Windows\PowerShell\*

- name: Disable IGMP
  raw: "Netsh interface ipv4 set global mldlevel=none"

- name: Network hardening 
  include: windows-network.yml

#- name: Uninstalling unused WindowsFeature 
#  win_command:  "PowerShell.exe -ExecutionPolicy Bypass Get-WindowsFeature | Where-Object {$_.Installed -match \"False\"} | Uninstall-WindowsFeature â€“Remove"  
## win_regedit: New in ansible version 2.0
#- include: windows-registry.yml
#  when: harden_win_registry is defined and harden_win_registry
#  tags:
#    - registry

- include: windows-ie.yml
- include: windows-smb.yml
- include: windows-powershell.yml
- include: windows-wmi.yml
- include: windows-online.yml

- include: windows-emet.yml
  when: harden_win_emet_conf != ''

- include: adobereader.yml
  when: harden_win_adobereader is defined and harden_win_adobereader

- include: windows-flash.yml
  when: harden_win_flash is defined and harden_win_flash

## Powershell profile
## https://www.fireeye.com/blog/threat-research/2016/02/greater_visibilityt.html
## http://fr.slideshare.net/Hackerhurricane/ask-aalware-archaeologist/25
## https://logrhythm.com/fr/blog/powershell-command-line-logging/
## FIXME! french characters issue in path?
###- name: set powershell profile
###  win_template:
###    src: Profile.ps1.j2
###    dest: 'c:\windows\system32\WindowsPowershell\v1.0\Profile.ps1'
#  ignore_errors: true

# https://gallery.technet.microsoft.com/scriptcenter/2d191bcd-3308-4edd-9de2-88dff796b0bc
###- name: Download Windows Update PowerShell Module
###  win_get_url:
###    url: 'https://gallery.technet.microsoft.com/scriptcenter/2d191bcd-3308-4edd-9de2-88dff796b0bc/file/41459/43/PSWindowsUpdate.zip'
###    dest: "{{ harden_win_temp_dir }}\\PSWindowsUpdate.zip"

#- debug: var=harden_win_sysmon
#- include: windows-sysmon.yml
#  when: harden_win_sysmon is defined and harden_win_sysmon

## PECaptureSvc, https://isc.sans.edu/forums/diary/Hunting+for+Executable+Code+in+Windows+Environments/20745/

## access time within Ntfs
## volume shadow copies
## central logging / windows event log forwarding
## https://blog.brankovucinec.com/2014/10/24/use-software-restriction-policies-to-block-viruses-and-malware/ = SRP lock on %APPDATA%

## Ansible v2: Windows Firewall configuration, http://docs.ansible.com/ansible/win_firewall_rule_module.html
#- name: Enable Windows Firewall
#  win_firewall_rule: enable=yes

#- include: windows-local-gpo.yml
#  when: harden_win_gpo_local is defined and harden_win_gpo_local

- include: windows-nxlog.yml
  when: harden_win_remotelogging is defined and harden_win_remotelogging

###- include: windows-vss.yml
###  when: harden_win_vss is defined and harden_win_vss

- include: windows-wmi-monitor.yml
  when: harden_win_wmi_monitor is defined and harden_win_wmi_monitor

#- include: windows-netcease.yml
#  when: harden_win_netcease is defined and harden_win_netcease

#- include: windows-osquery.yml
#  when: harden_win_osquery

#- include: windows-dnscrypt.yml
#  when: harden_win_simplednscrypt

- include: windows-firewall.yml
  when: harden_win_firewall is defined and harden_win_firewall

- include: mbrfilter.yml
  when: harden_win_mbrfilter

- include: windows-usb.yml
  when: harden_win_restrict_usb

- include: windows-cortana.yml
  when: harden_windows_disable_win10cortana and ansible_distribution_major_version >= 10

- include: windows-dma.yml
  when: harden_win_restrict_dma

- include: windows-cleanup.yml
